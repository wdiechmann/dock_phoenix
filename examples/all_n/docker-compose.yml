version: '2'  
services:  

  proxy:
    image: app/proxy
    build: 
      context: ./proxy
    networks:
      - web
    links:
      - app:app
    ports:
      - "80:80"
      - "443:443"
  app:
    # tell docker-compose which Dockerfile it needs to build
    image: app/web
    build:
      context: ./app
      dockerfile: Dockerfile.development
    # map the port of phoenix to the local dev port
    ports:
      - "4000:4000"
    # mount the code folder inside the running container for easy development
    volumes:
      - ./app:/app
    networks:
      - db
      - web
    # make sure we start postgres when we start this service
    depends_on:
      - db
    command: [ "mix", "phoenix.server" ]
    environment:
      - POSTGRES_PASSWORD=all_n
      # - POSTGRES_USER=postgres
      - POSTGRES_DB_USER=all_n
      - POSTGRES_DB_PASSWORD=pASSword
      - POSTGRES_DB_DATABASE=all_n_dev

  app_test:
    image: app/web
    networks:
      - db
    depends_on:
      - db
    command: [ "mix","test" ]
    environment:
      - POSTGRES_PASSWORD=all_n
      # - POSTGRES_USER=postgres
      - POSTGRES_DB_USER=all_n
      - POSTGRES_DB_PASSWORD=pASSword
      - POSTGRES_DB_DATABASE=all_n_dev

  db:
    image: app/db
    build:
      context: ./db
    # map the data volume, this is the way to keep our data persisitent
    ports:
      - "5432:5432"
    # mount the code folder inside the running container for easy development
    volumes:
       - ./db/data:/var/lib/postgresql/data
    networks:
      - db
       
    # set the user and password for postgres
    environment:
      - POSTGRES_PASSWORD=all_n
      # - POSTGRES_USER=postgres
      - POSTGRES_DB_USER=all_n
      - POSTGRES_DB_PASSWORD=pASSword
      - POSTGRES_DB_DATABASE=all_n_dev
      
networks:
  db:
  web: